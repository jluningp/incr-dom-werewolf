(function(joo_global_object)
   {"use strict";
    var
     runtime=joo_global_object.jsoo_runtime,
     global_data=runtime.caml_get_global_data(),
     Caml=global_data.Caml,
     invalid_arg=Caml[1],
     failwith=Caml[2],
     Exit=Caml[3],
     min=Caml[15],
     max=Caml[16],
     abs=Caml[17],
     max_int=Caml[18],
     min_int=Caml[19],
     lnot=Caml[20],
     infinity=Caml[21],
     neg_infinity=Caml[22],
     nan=Caml[23],
     max_float=Caml[24],
     min_float=Caml[25],
     epsilon_float=Caml[26],
     symbol=Caml[27],
     char_of_int=Caml[28],
     string_of_bool=Caml[29],
     bool_of_string_opt=Caml[30],
     bool_of_string=Caml[31],
     string_of_int=Caml[32],
     int_of_string_opt=Caml[33],
     string_of_float=Caml[34],
     float_of_string_opt=Caml[35],
     symbol$0=Caml[36],
     stdin=Caml[37],
     stdout=Caml[38],
     stderr=Caml[39],
     print_char=Caml[40],
     print_string=Caml[41],
     print_bytes=Caml[42],
     print_int=Caml[43],
     print_float=Caml[44],
     print_endline=Caml[45],
     print_newline=Caml[46],
     prerr_char=Caml[47],
     prerr_string=Caml[48],
     prerr_bytes=Caml[49],
     prerr_int=Caml[50],
     prerr_float=Caml[51],
     prerr_endline=Caml[52],
     prerr_newline=Caml[53],
     read_line=Caml[54],
     read_int_opt=Caml[55],
     read_int=Caml[56],
     read_float_opt=Caml[57],
     read_float=Caml[58],
     open_out=Caml[59],
     open_out_bin=Caml[60],
     open_out_gen=Caml[61],
     flush=Caml[62],
     flush_all=Caml[63],
     output_char=Caml[64],
     output_string=Caml[65],
     output_bytes=Caml[66],
     output=Caml[67],
     output_substring=Caml[68],
     output_byte=Caml[69],
     output_binary_int=Caml[70],
     output_value=Caml[71],
     seek_out=Caml[72],
     pos_out=Caml[73],
     out_channel_length=Caml[74],
     close_out=Caml[75],
     close_out_noerr=Caml[76],
     set_binary_mode_out=Caml[77],
     open_in=Caml[78],
     open_in_bin=Caml[79],
     open_in_gen=Caml[80],
     input_char=Caml[81],
     input_line=Caml[82],
     input=Caml[83],
     really_input=Caml[84],
     really_input_string=Caml[85],
     input_byte=Caml[86],
     input_binary_int=Caml[87],
     input_value=Caml[88],
     seek_in=Caml[89],
     pos_in=Caml[90],
     in_channel_length=Caml[91],
     close_in=Caml[92],
     close_in_noerr=Caml[93],
     set_binary_mode_in=Caml[94],
     string_of_format=Caml[96],
     symbol$1=Caml[97],
     exit=Caml[98],
     at_exit=Caml[99],
     valid_float_lexem=Caml[100],
     unsafe_really_input=Caml[101],
     do_at_exit=Caml[102],
     Not_found=Caml[103],
     Shadow_stdlib=
      [0,
       invalid_arg,
       failwith,
       Exit,
       min,
       max,
       abs,
       max_int,
       min_int,
       lnot,
       infinity,
       neg_infinity,
       nan,
       max_float,
       min_float,
       epsilon_float,
       symbol,
       char_of_int,
       string_of_bool,
       bool_of_string_opt,
       bool_of_string,
       string_of_int,
       int_of_string_opt,
       string_of_float,
       float_of_string_opt,
       symbol$0,
       stdin,
       stdout,
       stderr,
       print_char,
       print_string,
       print_bytes,
       print_int,
       print_float,
       print_endline,
       print_newline,
       prerr_char,
       prerr_string,
       prerr_bytes,
       prerr_int,
       prerr_float,
       prerr_endline,
       prerr_newline,
       read_line,
       read_int_opt,
       read_int,
       read_float_opt,
       read_float,
       open_out,
       open_out_bin,
       open_out_gen,
       flush,
       flush_all,
       output_char,
       output_string,
       output_bytes,
       output,
       output_substring,
       output_byte,
       output_binary_int,
       output_value,
       seek_out,
       pos_out,
       out_channel_length,
       close_out,
       close_out_noerr,
       set_binary_mode_out,
       open_in,
       open_in_bin,
       open_in_gen,
       input_char,
       input_line,
       input,
       really_input,
       really_input_string,
       input_byte,
       input_binary_int,
       input_value,
       seek_in,
       pos_in,
       in_channel_length,
       close_in,
       close_in_noerr,
       set_binary_mode_in,
       string_of_format,
       symbol$1,
       exit,
       at_exit,
       valid_float_lexem,
       unsafe_really_input,
       do_at_exit,
       Not_found];
    runtime.caml_register_global(1,Shadow_stdlib,"Shadow_stdlib");
    return}
  (function(){return this}()));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJzaGFkb3dfc3RkbGliLmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6W10sInNvdXJjZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7VSIsInNvdXJjZXNDb250ZW50IjpbXX0=
